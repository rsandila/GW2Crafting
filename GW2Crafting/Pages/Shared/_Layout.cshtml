@using GW2Crafting.Models
@inject GW2Crafting.Caching.Gw2TokenCache _tokenCache;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - GW2Crafting</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/GW2Crafting.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index">GW2Crafting</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                        @if (IndexModel.IsLoggedIn(Context))
                        {
                            var characters = await CharacterSelectionModel.GetCharacterInformation(Context, _tokenCache);
                            if (characters.Any())
                            {
                             <li>
                               <div class="dropdown">
                                   <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-bs-toggle="dropdown">Character Selection</a>
                                   <ul class="dropdown-menu">
                                       @foreach (var character in characters)
                                        {
                                                var localRef = $"/CharacterSelection?SelectedCharacter={Uri.EscapeDataString(character.Name)}&returnTo={Context.Request.Path.ToUriComponent()}";
                                                <li><a class="dropdown-item" href=@localRef>@character.Name (Level @character.Level @character.Profession)</a></li>                                                
                                        }
                                   </ul>
                               </div> 
                            </li>                                
                            }
                            @if (!string.IsNullOrWhiteSpace(IndexModel.SelectedCharacter(Context, _tokenCache)))
                            {
                            <li>
                               <div class="dropdown">
                                   <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownAction" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-bs-toggle="dropdown">Collection</a>
                                   <ul class="dropdown-menu">
                                       @foreach (var action in Enum.GetValues<MainListType>().Cast<MainListType>())
                                        {
                                            var localRef = $"/{action}";
                                            <li><a class="dropdown-item" href=@localRef>@action</a></li>                                                
                                        }
                                   </ul>
                               </div> 
                            </li>                                                                
                            }
                        }
                    </ul>
                    <ul class="navbar-nav flex-grow-1">
                        @if (IndexModel.IsLoggedIn(Context))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Logout">Account: @IndexModel.GetAccountName(Context, _tokenCache)</a>
                            </li>                            
                        }
                        <li class="nav-item  ml-auto">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2021 - GW2Crafting - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>